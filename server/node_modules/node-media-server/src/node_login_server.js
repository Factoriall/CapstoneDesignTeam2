const mysql = require('mysql');
const express = require('express');
const bodyParser = require('body-parser');
var app = express();
const Logger = require('./node_core_logger');
var url = require('url');

//db_config에서 설정, 이는 현 디렉토리/config/db_config.json으로 설정
//이는 개인정보를 담고 있으므로 db_config.json은 gitignore를 통해 git에 track되면 안됨
var db_config  = require('./config/db_config.json');
var connection = mysql.createConnection({
    host     : db_config.host,
    user     : db_config.user,
    password : db_config.password,
    database : db_config.database
});

//로그인 및 회원가입 구현 파트
class NodeLoginServer {
    constructor(config) {
        this.port = config.login.port 
        app.use(bodyParser.json());
        app.use(bodyParser.urlencoded({extended: true}));
        connection.connect();
		console.log('dbconnnect');
		app.get('/user/test', function(req, res){
			console.log('get connected');
			var html = `
				<form action="/user/login" method="post">
				  <p><input type="text" name="userEmail" placeholder="userEmail"></p>
		        <p>
		          <textarea name="userPwd" placeholder="pwd"></textarea>
	    	    </p>
	        	<p>
		          <input type="submit">
		       	</p>
			`;
			res.send(html);
		});
		app.get('/user/test2', function(req,res){
			console.log('signin connected');
			var html = `
				<form action="/user/join" method="post">
	            <p><input type="text" name="userEmail" placeholder="email"></p>
	            <p>
	              <textarea name="userPwd" placeholder="pwd"></textarea>
	            </p>
				<p>
				  <textarea name="userName" placeholder="name"></textarea>
				</p>
	            <p>
	              <input type="submit">
	            </p>
		        </form>
				`;
			res.send(html);
		});
        app.post('/user/login', function (req, res) {
			//여기서 sql 문의 경우 database에 어떤 스키마로 저장했는지에 따라 
            console.log(req.body);
            //body의 정보를 알아야 함, android에서 주는 이름과 일치해야 됨
            var userEmail = req.body.userEmail;
            var userPwd = req.body.userPwd;
            var sql = 'select * from testtable';

            connection.query(sql, userEmail, function (err, result) {
                var resultCode = 404;
                var message = '에러가 발생했습니다';
				console.log(result);
				console.log(result.length);
				//console.log("db - email: " + result[0].userEmail +  " pwd: " +result[0].userPwd);
                if (err) {
                    console.log(err);
                } else {
                    if (result.length === 0) {
                        resultCode = 204;
                        message = 'invaild email';
                    } else if (userPwd !== result[0].userPwd) {
                        resultCode = 204;
                        message = 'invalid password';
                    } else {
                        resultCode = 200;
                        message = 'login success ' + result[0].userName;
                    }
                }

                res.json({
                    'code': resultCode,
                    'message': message
                });
            });
        });

		app.post('/user/join', function(req, res){
		    console.log(req.body);	    
		    var userEmail = req.body.userEmail;
		    var userName = req.body.userName;
			var userPwd = req.body.userPwd;
			var sql = 'select * from testtable where userEmail = ?';
			connection.query(sql, userEmail, function(err, result){
				console.log(result);
				if(result.length !== 0){
					console.log("dup email, result length: " + result.length);
						res.json({
						"code": 204,
						"message": 'duplicated email'
					});
				}
				else{
					sql = 'select * from testtable where userName = ?';
					connection.query(sql, userName, function(err, result){
						if(result.length !== 0){
							res.json({
								"code": 204,
								"message": 'duplicated name'
							});
						}
						else{
							sql = 'insert into testtable (userEmail, userPwd, userName) values (?, ?, ?)';
							connection.query(sql, [userEmail, userPwd, userName], function(err, result){
								res.json({
									"code": 200,
									"message": 'signin success'
								});
							});
						}
					});
				}
		    });
	
		/*  if(duplicate == 0){
				console.log("name check duplicate: " + duplicate);
				sql = 'select * from testtable where userName = ?';
				connection.query(sql, userName, function(err, result){
					console.log('nodup name, result length: ' + result.length);
					if(result.length !== 0){
						console.log("name dup checked");
						code = 204;
						message = 'duplicated name';
						duplicate = 1;
					}
				});
			}
	
			if(duplicate == 0){
				sql = 'insert into testtable (userEmail, userPwd, userName) values (?, ?, ?)';
				connection.query(sql, [userEmail, userPwd, userName], function(err, result){
					console.log("duplicate: " + duplicate);
					code = 200;
					message = 'signin success ' + userName;
				});
			}
	*/
		});
	} 

    run() {
        app.listen(this.port, () => {
            Logger.log(`Node Login Http Server started on port: ${this.port}`);
        });
    }
}

module.exports = NodeLoginServer;
