const mysql = require('mysql');
const express = require('express');
const bodyParser = require('body-parser');
var app = express();
const Logger = require('./node_core_logger');
var url = require('url');

// mysql connection setting at db_config: ./config/db_config.json
// add db_config.json in gitignore list(not track in git)
var db_config  = require('./config/db_config.json');
var connection = mysql.createConnection({
    host     : db_config.host,
    user     : db_config.user,
    password : db_config.password,
    database : db_config.database
});

// login & signup & result
class NodeLoginServer {
    constructor(config) {
        this.port = config.login.port 
        app.use(bodyParser.json());
        app.use(bodyParser.urlencoded({extended: true}));
        connection.connect();
		
		// response to android request of pass/fail, POST
		// invalid user: return error with code: 204, msg: 'incorrect user'
		// user exist: find pass/fail of user in DB user, return code: 200, msg:'pass'/'fail'
		app.post('/user/pass', function(req, res){
			var resultCode = 404;
			var message = 'unknown error';
			
			var userName = req.body.userName;

			var sql = 'select pass from user where userName=?';

			connection.query(sql, userName, function(err, result){
				// unknown sql error
				if(err){
					console.log(err);
					res.json({
						'code': resultCode,
						'message': message,
					});
				}
				else{
					// invaild user
					if(result.length == 0){
						res.json({
							'code': 204,
							'message': 'incorrect user',
						});
					}
					else{
						// return pass
						if(result[0].pass == 'pass'){
							console.log('pass');
							res.json({
								'code': 200, 
								'message': userName + ' check',
								'pass': 'pass'
							});	
						}
						// return fail
						else{
							console.log('fail');
							res.json({
								'code': 200,
								'message': userName + ' check',
								'pass': 'fail'
							});
						}
					}
				}
			});
		});

		// return streaming result: success/failure, POST
		app.post('/user/result', function (req, res){
			var resultCode = 404;
			var message = 'unknown error';
			var finalResult = 'test result';
			
			// req.body: android requeset info
			var userName = req.body.userName;

			var resultCheck = 'select result from user where userName=?';
			
			// search userName in DB
			connection.query(resultCheck, userName, function(err, result){
				console.log(result);
				if(err){
					console.log(err);
					res.json({
						'code': resultCode,
						'message': message,
						'result': finalResult
					});
				}
				else{
					// invalid user
					if(result.length === 0){
						res.json({
							'code': 204,
							'message': 'incorrect user',
							'result': 'error'
						});
					}
					// user match
					else{

						// result not evaluated
						if(result[0].result == 'nothing'){
							console.log('result = nothing');
							resultCode = 204;
							message = 'not evaluated';

							// send response to android
							res.json({
								'code' : resultCode,
								'message' : message,
								'result' : 'nothing'
							});
						}

						// result evaluated
						else{
							console.log('result = ' + result[0].result);
							finalResult = result[0].result;
							
							// send response(result) to android
							res.json({
							 	'code' : 200,
								'message' : 'evaluated',
								'result' : finalResult
							});
							
							// initialize result for next evaluation
							connection.query('update user set result="nothing" where userName=?', userName, function(err, result){
								if(err){
									console.log(err);
								}
								else{
									console.log('initialize complete');
								}
							});
		
						}	
					}
				}
			});
		});


		// response code for login request
		// email, password not match: return code: 200, error msg
		// login success: return code: 204, userName
        app.post('/user/login', function (req, res) {
			// req.body: info from android  
            console.log(req.body);
            
			var userEmail = req.body.userEmail;
            var userPwd = req.body.userPwd;
            var sql = 'select * from user where userEmail = ?';
			
			// sql: select * from user where userEmail=(android sent userEmail);
            connection.query(sql, userEmail, function (err, result) {
                var resultCode = 404;
                var message = 'unknown error';

                if (err) {
                    console.log(err);
                } else {
					// invalid email
                    if (result.length === 0) {
                        resultCode = 204;
                        message = 'invalid email';
                    } 
					
					// invalid password
					else if (userPwd !== result[0].userPwd) {
                        resultCode = 204;
                        message = 'invalid password';
                    }
					
					// login success
					else {
                        resultCode = 200;
                        message = 'login success ' + result[0].userName;
						console.log('login success: ' + result[0].userName);
                    }
                }
				
				// return login result to android
                res.json({
                    'code': resultCode,
                    'message': message,
					'userName': result[0].userName
                });
            });
        });

		// response from signup request
		// check duplication of userEmail, userName
		// if email or name duplicate: return code: 204, error msg
		// no duplication: return code: 200, userName
		app.post('/user/join', function(req, res){
		    console.log(req.body);	    
		    var userEmail = req.body.userEmail;
		    var userName = req.body.userName;
			var userPwd = req.body.userPwd;
			var sql = 'select * from user where userEmail = ?';

			// check duplication of email
			connection.query(sql, userEmail, function(err, result){
				console.log(result);
				if(result.length !== 0){
						res.json({
						"code": 204,
						"message": 'duplicated email'
					});
				}
				else{
					// check duplication of userName
					sql = 'select * from user where userName = ?';
					connection.query(sql, userName, function(err, result){
						if(result.length !== 0){
							res.json({
								"code": 204,
								"message": 'duplicated name'
							});
						}
						// no duplication, add user info to DB
						else{
							sql = 'insert into user (userEmail, userPwd, userName) values (?, ?, ?)';
							connection.query(sql, [userEmail, userPwd, userName], function(err, result){
								res.json({
									"code": 200,
									"message": 'signin success: ' + userName
								});
							});
						}
					});
				}
		    });
		});
	} 

    run() {
        app.listen(this.port, () => {
            Logger.log(`Node Login Http Server started on port: ${this.port}`);
        });
    }
}

module.exports = NodeLoginServer;
